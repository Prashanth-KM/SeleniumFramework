<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="3" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Username is entered]]>
    </line>
    <line>
      <![CDATA[password is entered]]>
    </line>
    <line>
      <![CDATA[Login button is clicked]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="32686" started-at="2022-06-05T07:12:33 IST" finished-at="2022-06-05T07:13:06 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="32686" started-at="2022-06-05T07:12:33 IST" finished-at="2022-06-05T07:13:06 IST">
      <class name="Tests.LoginTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Tests.LoginTest@29ca901e]" name="beforeClass" is-config="true" duration-ms="8449" started-at="2022-06-05T07:12:33 IST" finished-at="2022-06-05T07:12:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@29ca901e]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2022-06-05T07:12:41 IST" finished-at="2022-06-05T07:12:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.InValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="InValidLogin()[pri:0, instance:Tests.LoginTest@29ca901e]" name="InValidLogin" duration-ms="3099" started-at="2022-06-05T07:12:41 IST" finished-at="2022-06-05T07:12:44 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Generic.CommonFunctions.isElementPresentAssertTrue(CommonFunctions.java:66)
at Pages.PageActions.LoginPageAction.inValidLogin(LoginPageAction.java:42)
at Tests.LoginTest.InValidLogin(LoginTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InValidLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@29ca901e]" name="afterMethod" is-config="true" duration-ms="502" started-at="2022-06-05T07:12:44 IST" finished-at="2022-06-05T07:12:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InValidLogin status=FAILURE method=LoginTest.InValidLogin()[pri:0, instance:Tests.LoginTest@29ca901e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="Login()[pri:0, instance:Tests.LoginTest@29ca901e]" name="Login" duration-ms="6402" started-at="2022-06-05T07:12:45 IST" finished-at="2022-06-05T07:12:51 IST">
          <reporter-output>
            <line>
              <![CDATA[Username is entered]]>
            </line>
            <line>
              <![CDATA[password is entered]]>
            </line>
            <line>
              <![CDATA[Login button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTest@29ca901e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-05T07:12:45 IST" finished-at="2022-06-05T07:12:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTest.Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@29ca901e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-06-05T07:12:51 IST" finished-at="2022-06-05T07:12:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=LoginTest.Login()[pri:0, instance:Tests.LoginTest@29ca901e] output=Username is entered]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Tests.LoginTest@29ca901e]" name="afterClass" is-config="true" duration-ms="106" started-at="2022-06-05T07:12:51 IST" finished-at="2022-06-05T07:12:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Tests.LoginTest -->
      <class name="Tests.InValidLoginTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Tests.InValidLoginTest@192b07fd]" name="beforeClass" is-config="true" duration-ms="8990" started-at="2022-06-05T07:12:51 IST" finished-at="2022-06-05T07:13:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Tests.InValidLoginTest@192b07fd]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-06-05T07:13:00 IST" finished-at="2022-06-05T07:13:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.InValidLoginTest.InValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="InValidLogin()[pri:0, instance:Tests.InValidLoginTest@192b07fd]" name="InValidLogin" duration-ms="2996" started-at="2022-06-05T07:13:00 IST" finished-at="2022-06-05T07:13:03 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Generic.CommonFunctions.isElementPresentAssertTrue(CommonFunctions.java:66)
at Pages.PageActions.LoginPageAction.inValidLogin(LoginPageAction.java:42)
at Tests.InValidLoginTest.InValidLogin(InValidLoginTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InValidLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.InValidLoginTest@192b07fd]" name="afterMethod" is-config="true" duration-ms="1025" started-at="2022-06-05T07:13:03 IST" finished-at="2022-06-05T07:13:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InValidLogin status=FAILURE method=InValidLoginTest.InValidLogin()[pri:0, instance:Tests.InValidLoginTest@192b07fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Tests.InValidLoginTest@192b07fd]" name="afterClass" is-config="true" duration-ms="1075" started-at="2022-06-05T07:13:04 IST" finished-at="2022-06-05T07:13:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Tests.InValidLoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
